plugins {
    id 'java'
    id 'nu.studer.jooq' version '8.2'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Log4j
    implementation 'org.apache.logging.log4j:log4j-core:2.23.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.8'

    // JOOQ
    implementation 'org.jooq:jooq:3.19.15'
    implementation 'org.postgresql:postgresql:42.5.4'
    jooqGenerator 'org.postgresql:postgresql:42.5.4'

    // Apache POI (XLSX files handling)
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    // Jetty
    implementation 'org.eclipse.jetty:jetty-server:11.0.15'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.15'

    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

jooq {
    version = '3.19.15'
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/swift_db'
                    user = 'swift_user'
                    password = 'swift123'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        includes = '.*'
                        excludes = ''
                        inputSchema = 'public'
                    }
                    target {
                        packageName = 'jooq'
                        directory = 'src/main/java/com/jakub/bone/generated'
                    }
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}